name: Setup

on:
  workflow_dispatch:
    inputs:
      slug: 
        description: 'Slug'
        required: true

      name: 
        description: 'Name'
        required: true

      bundle_id: 
        description: 'Bundle ID'
        required: true

      region:
        type: choice
        description: 'Data center region'
        required: true
        options:
          - ams 
          - fra
          - maa
          - cdg 
          - den 
          - dfw 
          - ewr 
          - gru 
          - hkg 
          - iad 
          - jnb 
          - lax 
          - lhr 
          - mad 
          - mia 
          - nrt 
          - ord 
          - scl 
          - sea 
          - sin 
          - sjc 
          - syd 
          - yul 
          - yyz 
      
      size:
        type: number
        description: 'Disk size in GB'
        default: 1
      
jobs:
  # setup:
  #   name: Setup
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write

  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v3

  #   - name: Setup Flutter
  #     uses: subosito/flutter-action@v2
  #     with:
  #       channel: 'stable'
        
  #   - name: Install dependencies
  #     working-directory: ./app
  #     run: flutter packages get

  #   - name: Icons
  #     working-directory: ./app
  #     run: flutter pub run icons_launcher:create

  #   - name: Install rename
  #     working-directory: ./app
  #     run: flutter pub global activate rename
    
  #   - name: Rename app
  #     working-directory: ./app
  #     run: flutter pub global run rename --bundleId ${{ inputs.bundle_id }}

  #   - name: Bundle ID
  #     working-directory: ./app
  #     run: flutter pub global run rename --appname "${{ inputs.name }}"

  #   - name: Commit and push changes
  #     run: |
  #       git config --global user.name "${{ github.actor }}"
  #       git config --global user.email "${{ github.actor }}@users.noreply.github.com"
  #       git add .
  #       git commit -m "Update app name, bundle ID and deployment config"
  #       git push

  #   - name: Create initial release
  #     uses: softprops/action-gh-release@v1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
  #     with:
  #       body: |
  #         ## Initial release
  #         This release contains the initial deployment of the app with new name and bundle ID.

  #         - App name: ${{ inputs.name }}
  #         - Bundle ID: ${{ inputs.bundle_id }}
  #       tag_name: "1.0.0"

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    # needs: setup
    defaults:
      run:
        working-directory: ./setup

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform variables
      run: |-
        cat > terraform.tfvars <<EOF
        cloudflare_api_token = "${{ secrets.CLOUDFLARE_API_TOKEN }}"
        cloudflare_zone_id = "${{ secrets.CLOUDFLARE_ZONE_ID }}"
        fly_api_token = "${{ secrets.FLY_API_TOKEN }}"
        slug = "${{ inputs.slug }}"
        domain = "${{ inputs.slug }}.deploid.studio"
        region = "${{ inputs.region }}"
        image = "${{ github.repository }}:latest"
        size = ${{ inputs.size }}
        EOF

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.4.6

    - name: Terraform init
      run: terraform init

    - name: Terraform apply
      run: terraform apply -auto-approve